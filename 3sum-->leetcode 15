Problem:
Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Notice that the solution set must not contain duplicate triplets.

 

Example 1:

Input: nums = [-1,0,1,2,-1,-4]
Output: [[-1,-1,2],[-1,0,1]]
Example 2:

Input: nums = []
Output: []
Example 3:

Input: nums = [0]
Output: []

solution:
var threeSum = function(nums) {
    nums.sort((a,b)=> a-b);
    
    let set = new Set();
    let result = [];
    
    if(nums.length < 3 || !nums.length)return []
    
    
    for(let i =0; i < nums.length-2; i++){
        let start = i+1;
        let end = nums.length-1;
        
        while(start<end){
            
            let current = nums[i] + nums[start] + nums[end];
            if(current == 0){
                let data = `${nums[i]}${nums[start]}${nums[end]}`
                if(!set.has(data)){
                    set.add(data)
                    result.push([nums[i] ,nums[start] ,nums[end]])
                }   
            }
                            
            if(current > 0){
               end--
            }else if(current < 0){
                start++
            }else{
                
                start++;
                end--
            }
   
        }
        
        
    }
    
    return result;
};
