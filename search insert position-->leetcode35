Problem:
Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

 

Example 1:

Input: nums = [1,3,5,6], target = 5
Output: 2
Example 2:

Input: nums = [1,3,5,6], target = 2
Output: 1
Example 3:

Input: nums = [1,3,5,6], target = 7
Output: 4
Example 4:

Input: nums = [1,3,5,6], target = 0
Output: 0
Example 5:

Input: nums = [1], target = 0
Output: 0
 

Constraints:

1 <= nums.length <= 104
-104 <= nums[i] <= 104
nums contains distinct values sorted in ascending order.
-104 <= target <= 104

solution:
/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number}
 */
var searchInsert = function(nums, target) {
    var start=0;
    var last=nums.length-1;
    while(start<=last){
        var mid=Math.floor((start+last)/2);
        if(nums[mid]==target){
          return mid  
        }
        if(nums[mid]<target){
            start=mid+1;
            continue;
        }
        if(nums[mid]>target){
            last=mid-1;
            continue;
            
        }return mid
    }return start
};
