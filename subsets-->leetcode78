Problem:
Given an integer array nums, return all possible subsets (the power set).

The solution set must not contain duplicate subsets.

 

Example 1:

Input: nums = [1,2,3]
Output: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]
Example 2:

Input: nums = [0]
Output: [[],[0]]
 

Constraints:

1 <= nums.length <= 10
-10 <= nums[i] <= 10
All the numbers of nums are unique.

solution:
/**
 * @param {number[]} nums
 * @return {number[][]}
 */
var subsets = function(nums) {
    var left=0;
    var right=0;
    var res=[];
    function back(arr,index){
        if(arr.length>=0){
            res.push(arr.slice())
        }
       for(var i=index;i<nums.length;i++){
           arr.push(nums[i]);
           back(arr,i+1);
           arr.pop();
       } 
    }
    back([],0);
    return res;
};

