Problem:
The set [1, 2, 3, ..., n] contains a total of n! unique permutations.

By listing and labeling all of the permutations in order, we get the following sequence for n = 3:

"123"
"132"
"213"
"231"
"312"
"321"
Given n and k, return the kth permutation sequence.

 

Example 1:

Input: n = 3, k = 3
Output: "213"
Example 2:

Input: n = 4, k = 9
Output: "2314"
Example 3:

Input: n = 3, k = 1
Output: "123

Solution:
var getPermutation = function(n, k) {
    
    function findPermutation(arr,curr){
        if(curr.length == n){
            counter++;
            if(counter == k){        
                res = curr.join('');    
                return
            }
        }
        
        for(let i=0;i<arr.length;i++){
            let myad=arr[i]
            curr.push(myad)
            arr.splice(i,1)          
            findPermutation(arr,curr)
            curr.pop()
            arr.splice(i,0,myad)
        }
    }
    
    
    let arr = [],counter = 0,res=''
    for(let i=1;i<=n;i++)arr.push(i)
    findPermutation(arr,[])
    return res
};
