Problem:
Given an array of integers nums and an integer k, return the total number of continuous subarrays whose sum equals to k.

 

Example 1:

Input: nums = [1,1,1], k = 2
Output: 2
Example 2:

Input: nums = [1,2,3], k = 3
Output: 2
 

Constraints:

1 <= nums.length <= 2 * 104
-1000 <= nums[i] <= 1000
-107 <= k <= 107

solution:
/**
 * @param {number[]} nums
 * @param {number} k
 * @return {number}
 */
var subarraySum = function(nums, k) {
    var counter=0;
    let sum=0;
    let map={0:1};
    for(var i=0;i<nums.length;i++){
      sum+=nums[i];
       if(map[sum-k]){
           counter=counter+map[sum-k];
       }
          map[sum]=map[sum]?map[sum]+1:1
       
    }
    return counter;
    }
    
 
